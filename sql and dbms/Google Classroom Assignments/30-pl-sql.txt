
 ==================================================================== 
 
 PL SQL
 
 ==================================================================== 


NAME  : Ajinkya Rathod
ROLL NO  : 30

===========================================================================================================================

QUESTION 1 : WAP to input two numbers and find out what is the output of all arithmetic operations. (Addition, Subtraction, Multiplication, Division etc.) 

 DELIMITER //
 CREATE PROCEDURE arithmetic(no1 INT,no2 INT)
     BEGIN
     DECLARE ans float;
     SET ans=no1 + no2;
     SELECT ans AS "addition";
     SET ans=no1 - no2;
     SELECT ans AS "subtraction";
     SET ans=no1*no2;
     SELECT ans AS "multiplication";
     SET ans=no1 / no2;
     SELECT ans AS "division";
     END//

 ***********************************
OUTPUT : 
 CALL arithmetic(20,10) //

+----------+
| addition |
+----------+
|       30 |
+----------+
1 row in set (0.109 sec)

+-------------+
| subtraction |
+-------------+
|          10 |
+-------------+
1 row in set (0.116 sec)

+----------------+
| multiplication |
+----------------+
|            200 |
+----------------+
1 row in set (0.122 sec)

+----------+
| division |
+----------+
|        2 |
+----------+
1 row in set (0.128 sec)
 
***********************************

===========================================================================================================================

QUESTION 2 : WAP to input rollno and three subject marks. Find out total, percentage, result and grade for the student FROM the entered data. 

 DELIMITER //
 CREATE PROCEDURE marksheet(rollno INT,sub1 INT,sub2 INT,sub3 INT)
     BEGIN
     DECLARE total INT DEFAULT 0;
     DECLARE percentage float;
     DECLARE result varchar(10);
     DECLARE grade varchar(10);
    
     SET total=sub1 + sub2 + sub3;
     SET percentage=total / 3;
    
     IF (sub1 >= 35 AND sub2 >= 35 AND sub3 >= 35) then
     SET result="PASS";
     ELSE
     SET result="FAIL";
     END IF;
    
     IF(percentage < 35 OR result="FAIL") then
     SET grade="F";
     ELSEIF(percentage >= 35 AND percentage < 60) then
     SET grade="C";
     ELSEIF(percentage >= 60 AND percentage < 80) then
     SET grade="B";
     ELSE
     SET grade="A";
     END IF;
    
     SELECT rollno AS "roll no",sub1 AS "subject1",sub2 AS "subject2",sub3 AS "subject3",total AS "total marks",percentage AS "percentage",grade AS "grade",result AS "result";
     END//

***********************************
OUTPUT :
 CALL marksheet(1,100, 98, 78) //

+---------+----------+----------+----------+-------------+------------+-------+--------+
| roll no | subject1 | subject2 | subject3 | total marks | percentage | grade | result |
+---------+----------+----------+----------+-------------+------------+-------+--------+
|       1 |      100 |       98 |       78 |         276 |         92 | A     | PASS   |
+---------+----------+----------+----------+-------------+------------+-------+--------+
***********************************

===========================================================================================================================

QUESTION 3 : WAP to PRINT first 10 odd numbers using for loop.

 DELIMITER //
 CREATE PROCEDURE oddno()
     BEGIN
     DECLARE no varchar(30)  DEFAULT "1";
     DECLARE count INT DEFAULT 1;
     DECLARE i INT DEFAULT 2;
    
     WHILE count < 10 do
     IF i%2 !=0 then
     SET no=concat(no,",",i);
     SET count=count + 1;
     END IF;
    
     SET i = i + 1;
     END WHILE;
    
     SELECT no AS "First 10 Odd numbers";
    
     END //

***********************************
OUTPUT :
 CALL oddno()
+--------------------------+
| First 10 Odd numbers     |
+--------------------------+
| 1,3,5,7,9,11,13,15,17,19 |
+--------------------------+
***********************************

===========================================================================================================================

QUESTION 4: WAP to PRINT prime numbers upto 10 using WHILE loop

 DELIMITER //

 CREATE PROCEDURE primeno()
     BEGIN
     DECLARE i INT DEFAULT 2;
     DECLARE no varchar(30) DEFAULT "";
     DECLARE j INT DEFAULT 2;
     DECLARE flag INT;
     
     WHILE i < 10 do
     SET flag=1;
     SET j=2;
     WHILE j < i and flag do
     IF i%j=0 then
     SET flag=0;
     END IF;
     SET j=j + 1;
     END WHILE;
    
     IF flag then
     SET no=concat(no,i,",");
     END IF;
     SET i=i + 1;
     END WHILE;
    
     SELECT no AS "Prime Numbers";
    
     END //

***********************************
OUTPUT :
call prime() //
+------------------------+
| Prime Numbers |
+------------------------+
| 2,3,5,7,               |
+------------------------+
***********************************

===========================================================================================================================
QUESTION 5 : WAP to input three nos and find out maximum and minimum FROM it. 


 DELIMITER //
 CREATE PROCEDURE minmax(no1 INT,no2 INT,no3 INT)
     BEGIN
     DECLARE min INT;
     DECLARE max INT;
    
     IF no1 < no2 then
     IF no1 < no3 then
     SET min=no1;
     ELSE
     SET min=no3;
     END IF;
    
     ELSE    
     IF no2 < no3 then
     SET min=no2;
     ELSE
     SET min=no3;
     END IF;
    
     END IF;
    
     IF no1 > no2 then
     IF no1 > no3 then
     SET max=no1;
     ELSE
     SET max=no3;
     END IF;
    
     ELSE
    
     IF no2 > no3 then
     SET max=no2;
     ELSE
     SET max=no3;
     END IF;
    
     END IF;
    
     SELECT min AS "min",max AS "max";
     END //

***********************************
OUTPUT :
 CALL minmax(45,86,78) //
 +------------+------------+
| min no | max no |
+------------+------------+
|         45 |         86 |
+------------+------------+
***********************************

===========================================================================================================================

QUESTION 6 : WAP to input empno FROM keybord. Check whether inputed empno exist in emp table or not.  IF not give error message otherwise display name and salary of that employe

 DELIMITER //

 CREATE OR REPLACE PROCEDURE checkemp(no INT)
     BEGIN
     DECLARE name varchar(30) DEFAULT "NULL";
     DECLARE sala INT;
     SELECT e_name INTO name FROM emp  WHERE e_id=no;
     SELECT e_salary INTO sala FROM emp  WHERE e_id=no;
     SELECT no,name ,sala;
    
     END //

***********************************
OUTPUT :
 CALL checkemp(1) //
+------+----------------+-------+
| no   | name           | sala  |
+------+----------------+-------+
|    3 | Ajinkya Rathod | 90000 |
+------+----------------+-------+
***********************************

==============================================================================================================================

QUESTION 7 : WAP to INSERT record in Customer table. Customer(cid,cname,address,city); 
 
 CREATE table customer(cid INT,cname varchar(255),address varchar(255),city varchar(20)) //

 DELIMITER //

 CREATE  PROCEDURE icstmr(id INT,name varchar(15),address varchar(50),city varchar(20))
     BEGIN
     INSERT INTO customer values(id,name,address,city);
     END //

***********************************
OUTPUT :
 CALL icstmr(1,'Lax','Megchar Porichi','Kutch') //

 SELECT * FROM customer //
+------+-------+-----------------+-------+
| cid  | cname | address         | city  |
+------+-------+-----------------+-------+
|    1 | Lax   | Megchar Porichi | Kutch |
+------+-------+-----------------+-------+

***********************************

==============================================================================================================================
